name: Master build

on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{secrets.PERSONAL_ACCESS_TOKEN}}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build with Gradle
        run: ./gradlew build

      - name: Get next version
        id: get_next_version
        uses: thenativeweb/get-next-version@main

      - name: Has next version?
        run: echo 'hasNextVersion ${{ steps.get_next_version.outputs.hasNextVersion }}'

      - name: Create release
        id: create-release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
        with:
          tag_name: ${{ steps.get_next_version.outputs.version }}
          release_name: v${{ steps.get_next_version.outputs.version }}
          draft: false
          prerelease: false
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true'}}

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: '${{ steps.get_next_version.outputs.version }}'

      - name: Build docker image
        env:
          GHCR_TOKEN: '${{ secrets.GHCR_TOKEN }}'
        run:
          ./gradlew jib -Djib.to.tags=v${{ steps.get_next_version.outputs.version }},v${{ steps.semver_parser.outputs.major }},v${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}


